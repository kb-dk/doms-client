<!--
  ~ Doms build framework version 1.0.4
  ~
  ~ $Id$
  ~ $Revision$
  ~ $Date$
  ~ $Author$
  ~
  ~ The DOMS project.
  ~ Copyright (C) 2007-2010  The State and University Library
  ~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project name="common">
    <!--Part of doms build framework version 1.0.4-->


    <property name="global.dir" value="${basedir}"/>
    <property name="jarfile" value="${ant.project.name}.jar"/>
    <property name="srcpack.zip" value="${ant.project.name}-src.zip"/>

    <import file="build-dependencies.xml"/>

    <property file="${global.dir}/build.properties"/>

    <dirname property="common.basedir" file="${ant.file.common}"/>

    <selector id="common.jars">
        <filename name="${sbutils.dir}/jars/**/*.jar"/>
    </selector>
    <selector id="soap.jars">
        <not>
            <filename name="**"/>
        </not>
    </selector>
    <selector id="rest.jars">
        <not>
            <filename name="**"/>
        </not>
    </selector>

    <selector id="all.jars">
        <or>
            <selector refid="common.jars"/>
            <selector refid="soap.jars"/>
            <selector refid="rest.jars"/>
        </or>
    </selector>



    <dirset id="module.dependencies" dir="${global.dir}/modules">
        <exclude name="**"/>
    </dirset>

    <fileset id="module.dependencies.jars" dir="${global.dir}/modules">
        <exclude name="**"/>
    </fileset>


    <path id="build.classpath">
        <fileset refid="module.libs"/>
        <fileset refid="project.libs"/>
        <fileset refid="module.dependencies.jars"/>
        <fileset refid="build.project.libs"/>
        <fileset dir="${global.dir}/lib">
            <selector refid="all.jars"/>
        </fileset>
    </path>


    <target name="_preclean"/>
    <target name="_postclean"/>

    <target name="clean" depends="_preclean"
            description="Cleans the package of all build artifacts.">
        <delete dir="classes"/>
        <delete dir="tempsrc"/>
        <delete dir="dist"/>
        <antcall target="_postclean"/>
    </target>



    <target name="_preinit"/>
    <target name="_postinit"/>


    <target name="init">
        <echo message="Using doms buildframework version 1.0.4"/>
    </target>



    <target name="_postcompile"/>
    <target name="_precompile"/>


    <target name="compile" depends="init,depends,_precompile"
            description="Compile all production classes, and copy properties to class dir">

        <pathconvert property="module.dependencies.pathconvert"
                     refid="module.dependencies">
            <mapper type="regexp" from="^(.)*" to="\0/dist/\*.jar"/>
        </pathconvert>

        <script language="javascript" classpathref="rhino.classpath"
                src="${common.basedir}/convertPath.js"/>

        <!-- get the source compile classpath in a printable form -->
        <pathconvert pathsep="${line.separator}|   |-- "
                     property="echo.path.compile"
                     refid="build.classpath">
        </pathconvert>

        <echo message="|-- compile classpath"/>
        <echo message="|   |"/>
        <echo message="|   |-- ${echo.path.compile}"/>


        <mkdir dir="classes"/>
        <mkdir dir="tempsrc"/>
        <javac source="1.6" destdir="classes" debug="on"
               encoding="UTF-8">
            <src>
                <pathelement path="src"/>
                <pathelement path="tempsrc"/>
            </src>
            <classpath refid="build.classpath"/>
        </javac>
        <copy todir="classes">
            <fileset dir="src">
                <include name="**/*.xml"/>
            </fileset>
            <fileset dir="tempsrc">
                <include name="**/*.xml"/>
            </fileset>

        </copy>
        <antcall target="_postcompile"/>
    </target>

    <target name="_prejar"/>
    <target name="_postjar"/>



    <target name="jar" depends="compile,_prejar">
        <mkdir dir="dist"/>

        <jar destfile="dist/${jarfile}"
             basedir="classes"/>
        <antcall target="_postjar"/>
    </target>

    <target name="_predist"/>
    <target name="_postdist"/>

    <target name="dist" depends="jar,sourcezip,_predist"
            description="Build the distributable package">
        <mkdir dir="dist"/>

        <copy todir="dist" flatten="true">
            <fileset refid="module.libs"/>
        </copy>
        <antcall target="_postdist"/>
    </target>

    <target name="_presourcezip"/>
    <target name="_postsourcezip"/>


    <target name="sourcezip" depends="_presourcezip">
        <mkdir dir="dist"/>

        <zip destfile="dist/${srcpack.zip}">
            <zipfileset dir="src">
                <include name="**/*"/>
            </zipfileset>
            <zipfileset dir="tempsrc">
                <include name="**/*"/>
            </zipfileset>
        </zip>
        <antcall target="_postsourcezip"/>
    </target>


</project>