<!-- Via XMLSpy.  Editor:  Ray Denenberg, Library of Congress; rden@loc.gov -->
<xs:schema xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://www.loc.gov/mods/v3"
           targetNamespace="http://www.loc.gov/mods/v3"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">
    <!-- -->
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.loc.gov/mods/xml.xsd"/>
    <xs:import namespace="http://www.w3.org/1999/xlink" schemaLocation="http://www.loc.gov/standards/mods/xlink.xsd"/>
    <!--

    HEAVILY CUT DOWN MODS SCHEMA FOR TESTING INFRASTRUCTURE CODE !!!!!!!!
-->

    <xs:element name="mods" type="modsDefinition"/>
    <!--  -->
    <xs:complexType name="modsDefinition">
        <xs:group ref="modsGroup" maxOccurs="unbounded"/>
    </xs:complexType>
    <!--
***********************************************************************
**      Definition of a MODS collection                                **
**********************************************************************
-->
    <xs:element name="modsCollection" type="modsCollectionDefinition"/>
    <!-- -->
    <xs:complexType name="modsCollectionDefinition">
        <xs:sequence>
            <xs:element ref="mods" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!--

************************************************
**      Group Definition
***********************************************
This forms the basis of the mods record definition, and also relatedItem. The difference between a MODS record and a relatedItem
(as they pertain to their usage of the group definition) is that mods requires at least one element and relatedItem does not.
The group definition is used by both, where relatedItem says minOccurs="0" and for the mods record definition minOccurs="1" (default).

-->
    <xs:group name="modsGroup">
        <xs:choice>
            <xs:element ref="part"/>
            <xs:element ref="accessCondition"/>
            <xs:element ref="relatedItem"/>
            <xs:element ref="titleInfo"/>
        </xs:choice>
    </xs:group>

    <xs:element name="part" type="partDefinition"/>
    <!-- -->
    <xs:complexType name="partDefinition">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="detail"/>
            <xs:element name="extent" type="extentDefinition"/>
        </xs:choice>
    </xs:complexType>
    <!--

********   Subordinate Elements for <part>
 -->
    <!--
********** detail **********
-->
    <xs:element name="detail" type="detailDefinition"/>
    <!-- -->
    <xs:complexType name="detailDefinition">
        <xs:choice maxOccurs="unbounded">
            <xs:element ref="number"/>
            <xs:element ref="caption"/>
            <xs:element ref="myType"/>
        </xs:choice>
        <xs:attribute name="level" type="xs:positiveInteger"/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="foobarFixedValueIsFoo" fixed="foo"/>
        <!--<xs:attribute name="level" type="xs:positiveInteger"/>-->
    </xs:complexType>
    <!-- -->
    <xs:element name="number" type="stringPlusLanguage"/>
    <xs:element name="caption" type="stringPlusLanguage"/>
    <xs:element name="myType" type="xs:string">
        <xs:attribute name="fixedValueIsbarfoo" fixed="barfoo"/>
    </xs:element>
    <!--
********** extent **********
-->
    <xs:complexType name="extentDefinition">
        <xs:sequence>
            <xs:element ref="start" minOccurs="0"/>
            <xs:element ref="end" minOccurs="0"/>
            <!--<xs:element ref="total" minOccurs="0"/>
            <xs:element ref="list" minOccurs="0"/>-->
        </xs:sequence>
        <xs:attribute name="unit" type="xs:string"/>
        <xs:attribute name="foobarFixedValueIsBar" fixed="bar"/>
        <xs:attributeGroup ref="myGroup" />
    </xs:complexType>
    <!-- -->
    <xs:element name="start" type="stringPlusLanguage"/>
    <xs:element name="end" type="stringPlusLanguage"/>

    <!--<xs:element name="total" type="xs:positiveInteger"/>
    <xs:element name="list" type="stringPlusLanguage"/>-->

    <xs:attributeGroup name="myGroup">
        <xs:attribute name="foo" type="xs:string" />
    </xs:attributeGroup>
    <!--
********** extent **********
 -->
    <xs:element name="extent">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="stringPlusLanguagePlusSupplied">
                    <xs:attribute name="unit"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <!--

****************************************************
*   Top Level Element <relatedItem>             *
*****************************************************

**********   relatedItem  **********
-->
    <xs:element name="relatedItem" type="relatedItemDefinition"/>
    <!-- -->
    <xs:complexType name="relatedItemDefinition">
        <xs:group ref="modsGroup" minOccurs="0" maxOccurs="unbounded"/>
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="preceding"/>
                    <xs:enumeration value="succeeding"/>
                    <xs:enumeration value="original"/>
                    <xs:enumeration value="host"/>
                    <xs:enumeration value="constituent"/>
                    <xs:enumeration value="series"/>
                    <xs:enumeration value="otherVersion"/>
                    <xs:enumeration value="otherFormat"/>
                    <xs:enumeration value="isReferencedBy"/>
                    <xs:enumeration value="references"/>
                    <xs:enumeration value="reviewOf"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
     <!--   <xs:attribute name="displayLabel" type="xs:string"/>
        <xs:attribute name="ID" type="xs:ID"/>
        <xs:attributeGroup ref="xlink:simpleLink"/>-->
    </xs:complexType>

    <xs:element name="accessCondition" type="accessConditionDefinition"/>
    <!-- -->
    <xs:complexType name="accessConditionDefinition" mixed="true">
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="altRepGroup" type="xs:string"/>

    </xs:complexType>


  <!--
    ****************************************************
    *   Top Level Element <titleInfo>                   *
    *****************************************************
    -->
    <xs:element name="titleInfo" type="titleInfoDefinition"/>
    <!-- -->
    <xs:complexType name="titleInfoDefinition">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="title"/>
            <xs:element ref="subTitle"/>
            <!--<xs:element ref="partNumber"/>
            <xs:element ref="partName"/>
            <xs:element ref="nonSort"/>-->
        </xs:choice>
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="abbreviated"/>
                    <xs:enumeration value="translated"/>
                    <xs:enumeration value="alternative"/>
                    <xs:enumeration value="uniform"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="otherType"/>
        <xs:attribute name="supplied" fixed="yes"/>
       <!-- <xs:attribute name="altRepGroup" type="xs:string"/>
        <xs:attributeGroup ref="altFormatAttributeGroup"/>
        <xs:attribute name="nameTitleGroup" type="xs:string"/>
        <xs:attribute name="usage" fixed="primary"/>
        <xs:attribute name="ID" type="xs:ID"/>
        <xs:attributeGroup ref="authorityAttributeGroup"/>
        <xs:attributeGroup ref="xlink:simpleLink"/>
        <xs:attributeGroup ref="languageAttributeGroup"/>
        <xs:attribute name="displayLabel" type="xs:string"/>-->
        <!--  -->
        <!-- otherType new in version 3.5 -->
        <!-- -->
        <!-- altFormat new in version 3.5 -->
    </xs:complexType>
    <!--

********   Subordinate Elements for <titleInfo>
 -->
    <xs:element name="title" type="stringPlusLanguage"/>
    <xs:element name="subTitle" type="stringPlusLanguage"/>
    <xs:element name="partNumber" type="stringPlusLanguage"/>
    <xs:element name="partName" type="stringPlusLanguage"/>
    <xs:element name="nonSort" type="stringPlusLanguage"/>

**********************************
String Definitions
**********************************
-->
    <!--
********** stringPlusLanguage
   -->
    <xs:complexType name="stringPlusLanguage">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="languageAttributeGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
************************* stringPlusLanguagePlusSupplied  *************************
 -->
    <xs:complexType name="stringPlusLanguagePlusSupplied">
        <xs:simpleContent>
            <xs:extension base="stringPlusLanguage">
                <xs:attribute name="supplied" fixed="yes"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
**********************************
  Attribute Group Definitions
**********************************
-->

    <!--
  ********** languageAttributeGroup   **********
-->
    <xs:attributeGroup name="languageAttributeGroup">
        <xs:attribute name="lang" type="xs:string"/>
        <xs:attribute ref="xml:lang"/>
        <xs:attribute name="script" type="xs:string"/>
        <xs:attribute name="transliteration" type="xs:string"/>
    </xs:attributeGroup>

</xs:schema>